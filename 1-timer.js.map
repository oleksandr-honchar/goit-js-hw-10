{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timerDisplay = document.querySelector('.timer');\n\nlet timerId = null;\nlet selectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    if (selectedDate > new Date()) {\n      startButton.disabled = false;\n    } else {\n      alert('Please choose a date in the future');\n      startButton.disabled = true;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\nstartButton.disabled = true;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction formatTime({ days, hours, minutes, seconds }) {\n  return `${String(days).padStart(2, '0')}d : ${String(hours).padStart(\n    2,\n    '0'\n  )}h : ${String(minutes).padStart(2, '0')}m : ${String(seconds).padStart(\n    2,\n    '0'\n  )}s`;\n}\n\nstartButton.addEventListener('click', () => {\n  if (!selectedDate || selectedDate <= new Date()) return;\n\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeDiff = selectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      timerDisplay.textContent = '00d : 00h : 00m : 00s';\n\n      datePicker.disabled = false;\n      return;\n    }\n\n    const time = convertMs(timeDiff);\n    timerDisplay.textContent = formatTime(time);\n  }, 1000);\n});\n"],"names":["datePicker","startButton","timerDisplay","timerId","selectedDate","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","formatTime","timeDiff","time"],"mappings":"mIAGA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAe,SAAS,cAAc,QAAQ,EAEpD,IAAIC,EAAU,KACVC,EAAe,KAEnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAC1BF,EAAe,IAAI,KACrBH,EAAY,SAAW,IAEvB,MAAM,oCAAoC,EAC1CA,EAAY,SAAW,GAE1B,CACH,EAEAM,EAAUP,EAAYK,CAAO,EAC7BJ,EAAY,SAAW,GAEvB,SAASO,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASC,EAAW,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrD,MAAO,GAAG,OAAOH,CAAI,EAAE,SAAS,EAAG,GAAG,CAAC,OAAO,OAAOC,CAAK,EAAE,SAC1D,EACA,GACD,CAAA,OAAO,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,CAAC,OAAO,OAAOC,CAAO,EAAE,SAC7D,EACA,GACD,CAAA,GACH,CAEAZ,EAAY,iBAAiB,QAAS,IAAM,CACtC,CAACG,GAAgBA,GAAgB,IAAI,OAEzCH,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBG,EAAU,YAAY,IAAM,CAE1B,MAAMY,EAAWX,EADL,IAAI,KAGhB,GAAIW,GAAY,EAAG,CACjB,cAAcZ,CAAO,EACrBD,EAAa,YAAc,wBAE3BF,EAAW,SAAW,GACtB,MACN,CAEI,MAAMgB,EAAOR,EAAUO,CAAQ,EAC/Bb,EAAa,YAAcY,EAAWE,CAAI,CAC3C,EAAE,GAAI,EACT,CAAC"}