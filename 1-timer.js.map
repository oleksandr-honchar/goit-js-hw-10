{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\nconst datePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timerDisplay = document.querySelector('.timer');\nlet timerId = null;\nlet selectedDate = null;\nflatpickr(datePicker, options);\nstartButton.disabled = true;\ndatePicker.addEventListener('input', () => {\n  selectedDate = new Date(datePicker.value);\n  if (selectedDate > new Date()) {\n    startButton.disabled = false;\n  } else {\n    window.alert('Please choose a date in the future');\n    datePicker.value = '';\n    startButton.disabled = true;\n  }\n});\nstartButton.addEventListener('click', () => {\n  if (timerId) {\n    clearInterval(timerId);\n  }\n  timerId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = selectedDate - currentTime;\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      timerDisplay.textContent = 'Time is up!';\n      return;\n    }\n    function convertMs(ms) {\n      // Number of milliseconds per unit of time\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = hour * 24;\n\n      // Remaining days\n      const days = Math.floor(ms / day);\n      // Remaining hours\n      const hours = Math.floor((ms % day) / hour);\n      // Remaining minutes\n      const minutes = Math.floor(((ms % day) % hour) / minute);\n      // Remaining seconds\n      const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n      return { days, hours, minutes, seconds };\n    }\n\n    console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n    console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n    console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    timerDisplay.textContent = `${String(days).padStart(2, '0')} : ${String(\n      hours\n    ).padStart(2, '0')} : ${String(minutes).padStart(2, '0')} : ${String(\n      seconds\n    ).padStart(2, '0')}`;\n  }, 1000);\n});\n"],"names":["options","selectedDates","datePicker","startButton","timerDisplay","timerId","selectedDate","flatpickr","timeDifference","convertMs","ms","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EACMC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAe,SAAS,cAAc,QAAQ,EACpD,IAAIC,EAAU,KACVC,EAAe,KACnBC,EAAUL,EAAYF,CAAO,EAC7BG,EAAY,SAAW,GACvBD,EAAW,iBAAiB,QAAS,IAAM,CACzCI,EAAe,IAAI,KAAKJ,EAAW,KAAK,EACpCI,EAAe,IAAI,KACrBH,EAAY,SAAW,IAEvB,OAAO,MAAM,oCAAoC,EACjDD,EAAW,MAAQ,GACnBC,EAAY,SAAW,GAE3B,CAAC,EACDA,EAAY,iBAAiB,QAAS,IAAM,CACtCE,GACF,cAAcA,CAAO,EAEvBA,EAAU,YAAY,IAAM,CAE1B,MAAMG,EAAiBF,EADH,IAAI,KAExB,GAAIE,GAAkB,EAAG,CACvB,cAAcH,CAAO,EACrBD,EAAa,YAAc,cAC3B,MACN,CACI,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC9C,CAEI,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAC/B,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUD,CAAc,EAClEJ,EAAa,YAAc,GAAG,OAAOO,CAAI,EAAE,SAAS,EAAG,GAAG,CAAC,MAAM,OAC/DC,CACD,EAAC,SAAS,EAAG,GAAG,CAAC,MAAM,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,CAAC,MAAM,OAC5DC,CACD,EAAC,SAAS,EAAG,GAAG,CAAC,EACnB,EAAE,GAAI,CACT,CAAC"}