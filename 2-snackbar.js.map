{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('form'); // Ensure your form has a proper reference\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, state } = event.target.elements;\n\n  const delayValue = +delay.value;\n  const stateValue = state.value;\n\n  // Use setTimeout for the delay\n  setTimeout(() => {\n    // Simulate a Promise with resolve or reject based on state value\n    new Promise((resolve, reject) => {\n      if (stateValue === 'fulfilled') {\n        resolve(); // Fulfilled state, resolve the promise\n      } else {\n        reject(); // Rejected state, reject the promise\n      }\n    })\n      .then(() => {\n        iziToast.success({\n          title: 'Success',\n          message: `✅ Fulfilled promise in ${delayValue}ms`, // Corrected `delay` reference\n          position: 'topRight',\n        });\n      })\n      .catch(() => {\n        iziToast.error({\n          title: 'Error',\n          message: `❌ Rejected promise in ${delayValue}ms`, // Corrected `delay` reference\n          position: 'topRight',\n        });\n      });\n  }, delayValue); // Apply the delay before triggering the promise\n}\n"],"names":["form","handleSubmit","event","delay","state","delayValue","stateValue","resolve","reject","iziToast"],"mappings":"wIAGA,MAAMA,EAAO,SAAS,cAAc,MAAM,EAE1CA,EAAK,iBAAiB,SAAUC,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAgB,EACtB,KAAM,CAAE,MAAAC,EAAO,MAAAC,CAAO,EAAGF,EAAM,OAAO,SAEhCG,EAAa,CAACF,EAAM,MACpBG,EAAaF,EAAM,MAGzB,WAAW,IAAM,CAEf,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC3BF,IAAe,YACjBC,IAEAC,GAEH,CAAA,EACE,KAAK,IAAM,CACVC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BJ,CAAU,KAC7C,SAAU,UACpB,CAAS,CACF,CAAA,EACA,MAAM,IAAM,CACXI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBJ,CAAU,KAC5C,SAAU,UACpB,CAAS,CACT,CAAO,CACJ,EAAEA,CAAU,CACf"}